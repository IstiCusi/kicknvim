.TH BVC 99 "June 2025" "MOS 6502 Instruction Set" "Kick'N'Vim Manual"

.SH NAME
bvc \- Branch if Overflow Clear

.SH SYNOPSIS
.B bvc
\fIrelative-address\fR

.SH DESCRIPTION
BVC (Branch if Overflow Clear) is a conditional branch instruction of the MOS 6502 processor. It causes the program counter (PC) to jump to a new location if the overflow flag (V) is clear (i.e., equals zero).

This instruction is typically used after arithmetic operations that may affect the overflow flag, allowing conditional control flow based on the absence of signed overflow.

The branch offset is an 8-bit signed value ranging from -128 to +127 bytes, relative to the address of the instruction following BVC.

.SH OPCODE
.TS
l l l l.
Addressing Mode	Opcode	Bytes	Cycles
Relative	$50	2	2 (+1 if branch taken, +1 if page crossed)
.TE

.SH FLAGS AFFECTED
.TP
None.
BVC only checks the overflow flag but does not modify any processor status flags.

.SH EXAMPLES
.TP
.B Conditional branch
.nf
    CLC          ; Clear carry flag
    ADC #$40     ; Add 0x40 to accumulator
    BVC noOverflow ; Branch if overflow flag is clear

    ; code for overflow occurred continues here

noOverflow:
    ; code for no overflow
.fi

.SH NOTES
- BVC is commonly used after ADC or SBC instructions to branch based on the absence of signed overflow.
- If the branch crosses a page boundary, the CPU requires one extra cycle.
- The target must be within -128 to +127 bytes of the instruction following BVC.

.SH SEE ALSO
bvs(99), beq(99), bne(99), adc(99), sbc(99)

.SH AUTHOR
Adapted for manpage usage by Stephan P. A. Strauss

