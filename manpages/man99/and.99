
.TH AND 99 "May 2025" "MOS 6502 Instruction Set" "Kick'N'Vim Manual"

.SH NAME
and \- Bitwise Logical AND with Accumulator

.SH SYNOPSIS
.B and
\fIaddressing-mode\fR

.SH DESCRIPTION
The AND instruction performs a bitwise logical AND between the accumulator and a value from memory, storing the result back in the accumulator. This operation is useful for masking bits, clearing specific bits, or isolating certain bits within a byte.

.SH OPCODES
.TS
l l l l.
Addressing Mode	Opcode	Bytes	Cycles
Immediate	$29	2	2
Zero Page	$25	2	3
Zero Page,X	$35	2	4
Absolute	$2D	3	4
Absolute,X	$3D	3	4 (+1 if page crossed)
Absolute,Y	$39	3	4 (+1 if page crossed)
(Indirect,X)	$21	2	6
(Indirect),Y	$31	2	5 (+1 if page crossed)
.TE

.SH FLAGS AFFECTED
.TP
.B Negative (N)
Set if bit 7 of the result is set; cleared otherwise.

.TP
.B Zero (Z)
Set if the result is zero; cleared otherwise.

.SH EXAMPLES
.nf
    LDA #%10101010   ; Load A with binary 10101010
    AND #%11001100   ; A = A AND 11001100 => 10001000
    ; Result: A = #%10001000, N = 1, Z = 0
.fi

.SH NOTES
- The AND instruction is commonly used to mask out bits. For example, ANDing with $0F isolates the lower nibble of a byte.
- It's often used in conjunction with other instructions like ORA (bitwise OR) and EOR (bitwise exclusive OR) for bit manipulation tasks.

.SH SEE ALSO
ora(99), eor(99), bit(99)

.SH AUTHOR
Adapted and for manpage usage by Stephan P. A. Strauss
