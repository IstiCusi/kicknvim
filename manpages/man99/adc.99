.TH ADC 99 "May 2025" "MOS 6502 Instruction Set" "Kick'N'Vim Manual"

.SH NAME
adc \- Add Memory to Accumulator with Carry

.SH SYNOPSIS
.B adc
\fIaddressing-mode\fR

.SH DESCRIPTION
ADC (Add with Carry) adds the contents of a memory location to the accumulator together with the carry flag. If the decimal mode is enabled, addition is performed as Binary Coded Decimal (BCD).

Unlike other processors, the 6502 has no "ADD without carry" instruction; to perform an addition that ignores the carry, the carry flag must first be cleared using the CLC instruction.

.SH FLAGS AFFECTED
.TP
.B Carry (C)
Set if the result exceeds 8 bits (i.e., > 255 in binary mode or invalid BCD).

.TP
.B Zero (Z)
Set if the result is zero.

.TP
.B Negative (N)
Set if bit 7 of the result is set (i.e., if the result is ≥ 128).

.TP
.B Overflow (V)
Set if a signed overflow occurs (i.e., when the sign of the result doesn't match expected two’s complement rules).

Note: In decimal mode, the behavior of V and N is undefined.

.SH ADDRESSING MODES
.TS
l l l l.
Addressing Mode	Opcode	Bytes	Cycles
Immediate	$69	2	2
Zero Page	$65	2	3
Zero Page,X	$75	2	4
Absolute	$6D	3	4
Absolute,X	$7D	3	4 (+1 if page crossed)
Absolute,Y	$79	3	4 (+1 if page crossed)
(Indirect,X)	$61	2	6
(Indirect),Y	$71	2	5 (+1 if page crossed)
.TE

.SH EXAMPLES

.TP
.B Adding two numbers
.nf
    LDA Num1     ; Load first operand
    CLC          ; Clear carry flag
    ADC Num2     ; Add second operand with carry
    STA Result   ; Store result
.fi

.TP
.B Adding multi-byte values
.nf
    LDA Num1
    CLC
    ADC Num2
    STA Result

    LDA Num1+1
    ADC Num2+1
    STA Result+1

    LDA Num1+2
    ADC Num2+2
    STA Result+2
.fi

.SH SEE ALSO
sbc(99), clc(99), sec(99), lda(99)

.SH AUTHOR
Adapted for manpage usage by Stephan P. A. Strauss

