.TH EOR 99 "June 2025" "MOS 6502 Instruction Set" "Kick'N'Vim Manual"

.SH NAME
eor \- Exclusive OR Memory with Accumulator

.SH SYNOPSIS
.B eor
\fIvalue\fR

.SH DESCRIPTION
EOR (Exclusive OR) performs a bitwise exclusive OR operation between the accumulator and a specified value or memory location. The result is stored back in the accumulator.

This instruction is useful for toggling bits, inverting values, or performing bitmask operations.

.SH OPCODES
.TS
l l l l.
Addressing Mode	Opcode	Bytes	Cycles
Immediate	$49	2	2
Zero Page	$45	2	3
Zero Page,X	$55	2	4
Absolute	$4D	3	4
Absolute,X	$5D	3	4 (+1 if page crossed)
Absolute,Y	$59	3	4 (+1 if page crossed)
Indirect,X	$41	2	6
Indirect,Y	$51	2	5 (+1 if page crossed)
.TE

.SH FLAGS AFFECTED
.TP
.B N
Set if bit 7 of the result is set; cleared otherwise.
.TP
.B Z
Set if the result is zero; cleared otherwise.

.SH EXAMPLES
.TP
.B Toggle bits in the accumulator
.nf
    LDA #%10101010 ; Load pattern into accumulator
    EOR #%11111111 ; Invert all bits
    ; Accumulator now contains #%01010101
.fi

.TP
.B Clear specific bits using a mask
.nf
    LDA #%11110000 ; Load pattern into accumulator
    EOR #%00001111 ; Toggle lower 4 bits
    ; Accumulator now contains #%11111111
.fi

.SH NOTES
- EOR is often used to invert bits: `EOR #$FF` effectively performs a bitwise NOT.
- It can also be used to toggle specific bits by EORing with a mask.
- EOR does not affect the Carry (C) or Overflow (V) flags.

.SH SEE ALSO
and(99), ora(99), adc(99), sbc(99)

.SH AUTHOR
Adapted for manpage usage by Stephan P. A. Strauss

